version: '3.8'

services:
  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - '5433:5432'
  mongo1:
    image: mongo:4.2
    container_name: mongo1
    command: [ "--replSet", "my-replica-set", "--bind_ip_all", "--port", "30001" ]
    volumes:
      - ./data/mongo-1:/data/db
    ports:
      - '30001:30001'
    healthcheck:
      test: test $$(echo "rs.initiate({_id:'my-replica-set',members:[{_id:0,host:\"mongo1:30001\"},{_id:1,host:\"mongo2:30002\"},{_id:2,host:\"mongo3:30003\"}]}).ok || rs.status().ok" | mongo --port 30001 --quiet) -eq 1
      interval: 10s
      start_period: 30s
    environment:
      MONGO_INITDB_DATABASE: test
  mongo2:
    image: mongo:4.2
    container_name: mongo2
    command: [ "--replSet", "my-replica-set", "--bind_ip_all", "--port", "30002" ]
    volumes:
      - ./data/mongo-2:/data/db
    ports:
      - '30002:30002'
  mongo3:
    image: mongo:4.2
    container_name: mongo3
    command: [ "--replSet", "my-replica-set", "--bind_ip_all", "--port", "30003" ]
    volumes:
      - ./data/mongo-3:/data/db
    ports:
      - '30003:30003'
  prometheus:
    image: prom/prometheus
    volumes:
      - ./infra/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-storage:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - '9090:9090'
    extra_hosts:
      - "host.docker.internal:host-gateway"
  grafana:
    image: grafana/grafana
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - prometheus
    environment:
      - TZ="Europe/Moscow"
    networks:
      - default
    ports:
      - '3000:3000'
  redis:
    image: redis
    restart: always
    volumes:
      - ./storage/redis/data:/data
    ports:
      - "6379:6379"
    logging:
      driver: none
#  jaeger:
#    image: jaegertracing/all-in-one
#    container_name: jaeger
#    restart: on-failure
#    ports:
#      - '5775:5775/udp'
#      - '6831:6831/udp'
#      - '6832:6832/udp'
#      - '5778:5778'
#      - '16686:16686'
#      - '14268:14268'
#      - '9411:9411'
#    environment:
#      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
volumes:
  postgres:
  mongo:
  grafana-storage:
  prometheus-storage:
