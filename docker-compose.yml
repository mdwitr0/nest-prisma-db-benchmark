version: '3.8'
services:
  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - '5433:5432'
  mongo:
      image: prismagraphql/mongo-single-replica:4.4.3-bionic
      environment:
        MONGO_INITDB_ROOT_USERNAME: mongo
        MONGO_INITDB_ROOT_PASSWORD: mongo
        MONO_INITDB_DATABASE: mongo
        INIT_WAIT_SEC: 3
      ports:
        - '27017:27017'

  prometheus:
    image: prom/prometheus
    volumes:
      - ./infra/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-storage:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - '9090:9090'
    extra_hosts:
      - "host.docker.internal:host-gateway"
  grafana:
    image: grafana/grafana
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - prometheus
    environment:
      - TZ="Europe/Moscow"
    networks:
      - default
    ports:
      - '3000:3000'
  redis:
    image: redis
    restart: always
    volumes:
      - ./storage/redis/data:/data
    ports:
      - "6379:6379"
    logging:
      driver: none
#  jaeger:
#    image: jaegertracing/all-in-one
#    container_name: jaeger
#    restart: on-failure
#    ports:
#      - '5775:5775/udp'
#      - '6831:6831/udp'
#      - '6832:6832/udp'
#      - '5778:5778'
#      - '16686:16686'
#      - '14268:14268'
#      - '9411:9411'
#    environment:
#      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
volumes:
  postgres:
  mongo:
  grafana-storage:
  prometheus-storage:
